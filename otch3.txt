Процессы в OC GNU/Linux 
Каждый процесс имеет свой собственный идентификатор.
Получить значение идентификатора можно при помощи системного вызова getpid()
Идентификатор родительского процесса возвращается системным вызовом getppid()

Программа, выводящая на экран идентификатор текущего и родительского процессов:

#include <stdio.h>
#include <sys/types.h>
#include <unistd.h>
#include <stdlib.h>
int main() {
        pid_t prid, parentprid;
        prid = getpid();
        parentprid = getppid();
        printf("Ид. текущего процесса: %d\nИд. родительского процесса: %d\n", prid, parentprid);
        return 0;
}


sedova_ae@alexandr-Aspire-Z5751:~/OS_25$  ps
    PID TTY          TIME CMD
  13295 pts/8    00:00:00 bash
  13761 pts/8    00:00:00 ps
sedova_ae@alexandr-Aspire-Z5751:~/OS_25$ vim pr003.c
sedova_ae@alexandr-Aspire-Z5751:~/OS_25$ gcc pr003.c -o pr003.out
sedova_ae@alexandr-Aspire-Z5751:~/OS_25$ ./pr003.out
Ид. текущего процесса: 14293
Ид. родительского процесса: 13295

Родительским процессом для запущенной программы является командная оболочка bash, поэтому ее c id родительского процесса

sedova_ae@alexandr-Aspire-Z5751:~/OS_25$ ./pr003.out
Ид. текущего процесса: 14827
Ид. родительского процесса: 13295

После второго запуска программы меняется id текущего процесса, так как предыдущий процесс уже завершился
