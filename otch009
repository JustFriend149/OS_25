Работа с pipe. Часть 1

Для работы с pipe можно воспользоваться системными вызовами write() для записи и read() для чтения аналогично тому, как это делалось для записи в файл и чтения из файла. Различия в том, что при чтении информация из файла не исчезает, а байт, прочитанный из pipe удаляется.
Для создания pipe  используется системный вызов pipe(), которому в качестве параметра должен быть передан масссив из двух целых чисел. Элемент массива с индексом 0 используется как файловый дескприптор для чтения, а элемент с индексом 1 используется для записи.

Пример:
int fd[2];
pipe(fd);

Таблица файловых дескрипторов наследуется дочерним процессом от родительского, поэтому процесс-ребенок может отправлять информацию через pipe любому из своих предков, так же, как и читать информацию, отправленную ими в pipe.
Pipe существует до тех пор, пока хотя бы один из его потоков не закрыт. Для этого нужно, чтобы каждый родственный процесс завершил работу, или в процессе работы явно закрыл входной и выходной поток.
